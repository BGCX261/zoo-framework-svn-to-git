/**  * ... * @author Marcelo Duende *  * @version 0.02 *  * @usage  * import com.zoo.CharacterReplacer; * CharacterReplacer.add($textField, { $vars }); *  * CharacterReplacer.add(test_txt, {f:"a", s:"."}); // replacing the "a" string contents in test_txt by ".".  * Can you use it on words too, like... * CharacterReplacer.add(test_txt, {f:"mar", s:"due"}); // replacing the "mar" string contents in test_txt by "due"  *  * ---------------------------------------------- *  * @param  * $textField = The TextField to be selected; * $vars = Here, "f:" means the first subString to be changed, and "s:" means the subString to be added in "f:". *  *  * */package com.zoo{	import flash.text.TextField;	public class CharacterReplacer extends CheckVersion	{		/* set version */		private const _version:Number = 0.02;		private var _textVar:String;		private var _text:TextField;		private var saveVars:Array = new Array();		private var _f:int;		private var _s:int;		public function CharacterReplacer($textVar:TextField, $vars:Object)		{			super();			if(_version == version)			{				for (var a:* in $vars) {					var _tmp:Object = new Object();					_tmp["property"] = a;					_tmp["value"] = $vars[a];					saveVars.push(_tmp["property"], _tmp["value"]);				}				if(_tmp["property"] == "f" || _tmp["property"] == "s")				{					switch (_tmp["property"])					{						case "f":							_f = saveVars.indexOf(a);							break;						case "s":							_s = saveVars.indexOf(a);							break;					}				}				var reg:RegExp = new RegExp(saveVars[_f+1], "g");				_text    = $textVar;				_textVar = $textVar.text;				_textVar = _textVar.replace(reg, saveVars[_s+1]);				_text.text = _textVar;			} else {				trace("Your Zoo Framework is outdating, please, visit http://code.google.com/p/zoo-framework/ and download the new version")			}		}		public static function add($textVar:TextField, $vars:Object):CharacterReplacer {			return new CharacterReplacer($textVar, $vars);		}	}}